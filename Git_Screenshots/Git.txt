CHAT GPT
git init
git clone <repository-url>
git status
git add <single file name>
git add .
git commit -m "Describe what this commit does"

git branch <branch-name>  // create a branch name
git checkout <branch-name> // switch to a branch
git checkout main // switch to main branch 
git merge <branch-name> // merge feature branch
git push origin <branch-name> // push changes to a remote repository
git push origin main // push changes to main branch
git pull // pull changes from any one else

git remote add origin <repository-url> // to add a remote repository
git clone <repository-url>

// Add the remote repository as the origin (if you havenâ€™t already): 
git remote add origin <url-of-github-repo>  
// Push your local changes to GitHub:  
git push origin main


/////////////////////////////
git branch ( to check branch )
git commit -m "add new button"
git status

git branch -M main (to rename branch)
git checkout <- branch name -> (to navigate)
git checkout -b <- new branch name -> (to create new branch)

git branch -d <- branch name -> (to delete branch)
git diff <- branch name -> ( to compare commits, branches, files & more)
git merge <- branch name -> (to merge 2 branches)
OR
create a PR

git pull origin branch ( used to fetch and download content from a remote repo and immediately update the local repo to match that content).

//fixing mistakes
case 1: staged changes
   git reset <- file name ->
   git reset

case 2: committed changes (for one commit)
   git reset HEAD-1

case 3: committed changes (for many commits)
   git reset <- commit hash ->
   git reset --hard <- commit harsh ->

git push origin HEAD:master

echo "# ki" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:techboyankit/ki.git
git push -u origin main

git remote add origin git@github.com:techboyankit/ki.git
git branch -M main
git push -u origin main